{
	/*
    tsconfig.json 是TS编译器的配置文件，TS编译器可以根据配置文件信息来对代码进行编译
    include 用来指定哪些ts文件需要被编译
     路径：** 表示任意目录
            *表示任意文件
    exclude 指定哪些文件不需要被编译
            默认值 ['node_modules','bower_components','jspm_packages']
    extends 继承其他文件的配置项  extends :path
    files:需要编译的文件  不包含路径   files:[a.ts,b.ts]
    */
	"include": ["./src/**/*.ts"],
	"exclude": ["./src/hello/**/*.ts"],
	// “compilerOptions  ts编译器的配置项
	"compilerOptions": {
		// target 用来执行编译成JS的版本
		// 'es3', 'es5', 'es6', 'es2015', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'esnext'.
		"target": "es2015",
		// 使用的模块化规范
		// 'none', 'commonjs', 'amd', 'system', 'umd', 'es6', 'es2015', 'es2020', 'es2022', 'esnext', 'node12', 'nodenext'.
		"module": "amd",

		//lib 用来执行项目中使用的库 第三方库提示 有默认值
		// 'es5', 'es6', 'es2015', 'es7', 'es2016', 'es2017', 'es2018', 'es2019', 'es2020', 'es2021', 'esnext', 'dom', 'dom.iterable', 'webworker', 'webworker.importscripts', 'webworker.iterable', 'scripthost', 'es2015.core', 'es2015.collection', 'es2015.generator', 'es2015.iterable', 'es2015.promise', 'es2015.proxy', 'es2015.reflect', 'es2015.symbol', 'es2015.symbol.wellknown', 'es2016.array.include', 'es2017.object', 'es2017.sharedmemory', 'es2017.string', 'es2017.intl', 'es2017.typedarrays', 'es2018.asyncgenerator', 'es2018.asynciterable', 'es2018.intl', 'es2018.promise', 'es2018.regexp', 'es2019.array', 'es2019.object', 'es2019.string', 'es2019.symbol', 'es2020.bigint', 'es2020.promise', 'es2020.sharedmemory', 'es2020.string', 'es2020.symbol.wellknown', 'es2020.intl', 'es2021.promise', 'es2021.string', 'es2021.weakref', 'es2021.intl', 'esnext.array', 'esnext.symbol', 'esnext.asynciterable', 'esnext.intl', 'esnext.bigint', 'esnext.string', 'esnext.promise', 'esnext.weakref'.
		// "lib": [ ]

		// 编译后的输出文件
		"outDir": "./dist",

		// 将编译后的代码合并
		// 设置之后将全局作用域中的所有的代码会合并
		// 如果要将模块合并的话 module需要是amd 或者system模式哦
		// "outFile": "./dist/app.js",

		// 所有严格检查的总开关
		"strict": true,
		// 是否对JS文件进行编译 默认false
		"allowJs": true,

		// 是否检查JS文件语法 默认false
		"checkJs": true,

		// 是否移除注释
		"removeComments": true,

		// 不生成编译后的文件
		"noEmit": true,

		// 当错误时不生成编译文件
		"noEmitOnError": true,

		// 语法检查配置项
		// 编译后文件是否开启严格模式 默认false  "useStrict"  : true,
		// JS文件中有模块引入的默认开启严格模式
		"alwaysStrict": true,

		//是否允许隐式的any类型
		"noImplicitAny": true,

		//是否允许隐式的this
		"noImplicitThis": true,

		// 是否严格的检查空值
		"strictNullChecks": true
	}
}
